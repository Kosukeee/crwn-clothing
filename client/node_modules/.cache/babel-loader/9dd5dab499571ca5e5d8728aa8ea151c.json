{"ast":null,"code":"var _jsxFileName = \"/Users/KosukeMuramatsu/Documents/test/crwn-clothing/src/pages/shop/Shop.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport Collection from '../collection/Collection';\nimport { firestore, convertCollectionsToSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\n\nclass Shop extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsToSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: Collection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections)\n});\n\nexport default Shop;","map":{"version":3,"sources":["/Users/KosukeMuramatsu/Documents/test/crwn-clothing/src/pages/shop/Shop.jsx"],"names":["React","Component","Route","CollectionsOverview","Collection","firestore","convertCollectionsToSnapshotToMap","connect","Shop","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","render","match","props","path","mapDispatchToProps","dispatch","updateCollections"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,EAAoBC,iCAApB,QAA6D,+BAA7D;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BQ,uBAD2B,GACD,IADC;AAAA;;AAG3BC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAmB;AAC1C,YAAMC,cAAc,GAAGT,iCAAiC,CAACQ,QAAD,CAAxD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACD,KAHD;AAID;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAElB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEgB,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEjB,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AArB0B;;AAsB5B;;AAED,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCC,EAAAA,iBAAiB,EAAET,cAAc,IAAIQ,QAAQ,CAACC,iBAAD;AADP,CAAL,CAAnC;;AAIA,eAAehB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections-overview/CollectionsOverview';\nimport Collection from '../collection/Collection';\nimport { firestore, convertCollectionsToSnapshotToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\n\nclass Shop extends Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef.onSnapshot(async snapshot  => {\n      const collectionsMap = convertCollectionsToSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={Collection} />\n      </div>\n    );\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections)\n})\n\nexport default Shop;"]},"metadata":{},"sourceType":"module"}